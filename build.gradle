/*
 * Copyright (c) 2021 LCLP.
 *
 * Licensed under the MIT License. For more information, consider the LICENSE file in the project's root directory.
 */

import org.ajoberstar.grgit.Tag



plugins {
    id 'org.ajoberstar.grgit' version '4.1.0'
}

def privateProps = new Properties()
def privatePropsFile = file("private.properties");
if(privatePropsFile.exists())
    privatePropsFile.withInputStream { privateProps.load(it) }

ext {
    SPEC_VERSION = '0.0'
    getTag = {
        def raw = grgit.describe(longDescr: true, tags:true)
        def desc = (raw == null ? '0.0-0-unknown' : grgit.describe(longDescr: true, tags:true)).split('-') as List
        desc.remove(desc.size() - 1)
        desc.remove(desc.size() - 1)
        return tag = desc.join('-')
    }
    getHeadId = {
        return grgit.head().abbreviatedId;
    }
    PRIVATE = privateProps
}

def headId = grgit.head().id
def headTag = null

grgit.tag.list().forEach {
    def tag = it as Tag
    if(tag.commit.id == headId) headTag = tag;
}

println headTag